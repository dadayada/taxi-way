{"version":3,"sources":["persistence.ts","core/records.ts","core/constants.ts","pages/home/store.ts","pages/home/view.tsx","routing.ts","pages/record/store.ts","util.ts","pages/record/view.tsx","components/bottom-navigation.tsx","pages/history/store.ts","pages/history/view.tsx","app.tsx","index.tsx"],"names":["localStorageKey","RECORD_TYPE","ResultsType","removeRecord","createEvent","recordAdded","recordChanged","$records","createStore","JSON","parse","window","localStorage","getItem","on","s","p","concat","Object","toConsumableArray","filter","el","added","map","watch","data","setItem","stringify","reduceDebit","records","record","type","EXPENSE","reduce","acc","value","reduceCredit","INCOME","resultsTypeChanged","$currentResultsType","TODAY","_","$results","combine","currentResultsType","isToday","WEEK","isThisWeek","MONTH","isThisMonth","intervalFunction","recordsInInterval","fromUnixTime","debit","credit","useStyles","makeStyles","incomeText","color","green","fontWeight","spendingText","red","HomePage","classes","results","useStore","react_default","a","createElement","Grid","container","item","xs","Box","display","justifyContent","FormControl","component","FormLabel","RadioGroup","aria-label","name","row","onChange","event","target","FormControlLabel","control","Radio","label","alignItems","Typography","align","variant","className","history","createHashHistory","locationChanged","listen","location","recordTypeChanged","recordValueChanged","saveRecordRequsted","editRecordPageMounted","existedRecordToEditPicked","sample","source","clock","fn","find","filterMap","Boolean","undefined","recordToEdit","restore","$type","_ref","$recordValue","_ref2","String","recordToSavePrepared","createStoreObject","_ref3","Number","getUnixTime","Date","recordToSaveValidated","split","recordValid","valueEmpty","cases","unit","shape","result","key","decompose","guard","guardShape","$error","reset","merge","push","theme","root","width","button","margin","spacing","error","RecordScreen","props","recordIsCreating","recordType","recordValue","params","useParams","useEffect","Fragment","e","TextField","autoFocus","placeholder","Button","onClick","position","bottom","BottomNavigation","showLabels","BottomNavigationAction","icon","Home","Link","to","PostAdd","History","ShowChart","removeBtnClicked","removeCancelled","removeConfirmed","$recordsForHistory","sort","b","$modalOpen","$recordIdToRemove","$recordIdDefined","content","alignContent","HistoryScreen","modalOpen","toLocaleDateString","IconButton","Delete","react_router_dom","Edit","Divider","Dialog","open","DialogContent","DialogActions","overflow","padding","Routes","react_router","path","bottom_navigation_BottomNavigation","App","app_Routes","rootElement","document","getElementById","createMuiTheme","ReactDOM","render","ThemeProvider"],"mappings":"kWAAMA,EAAkB,YCIjB,ICJKC,ECMAC,EFFCC,EAAeC,cACfC,EAAcD,cACdE,EAAgBF,cAQhBG,EAAWC,YDPfC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQb,IAAoB,OAAS,ICQ1Ec,GAAGT,EAAa,SAACU,EAAGC,GAAJ,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAcH,GAAd,CAAiBC,MACjCF,GAAGX,EAAc,SAACY,EAAGC,GAAJ,OAAUD,EAAEK,OAAO,SAAAC,GAAE,OAAIA,EAAGC,QAAUN,MACvDF,GAAGR,EAAe,SAACS,EAAGC,GAAJ,OAAUD,EAAEQ,IAAI,SAAAF,GAAE,OAAKA,EAAGC,QAAUN,EAAEM,MAAQN,EAAIK,MAEvEd,EAASiB,MDjBF,SAA+BC,GACpCd,OAAOC,aAAac,QAAQ1B,EAAiBS,KAAKkB,UAAUF,eEHlDxB,8DCMAC,6DAMZ,IAAM0B,EAAc,SAACC,GAAD,OAClBA,EACGT,OAAO,SAAAU,GAAM,OAAIA,EAAOC,OAAS9B,EAAY+B,UAC7CC,OAAO,SAACC,EAAKJ,GAAN,OAAiBA,EAAOK,MAAQD,GAAK,IAE3CE,EAAe,SAACP,GAAD,OACnBA,EACGT,OAAO,SAAAU,GAAM,OAAIA,EAAOC,OAAS9B,EAAYoC,SAC7CJ,OAAO,SAACC,EAAKJ,GAAN,OAAiBA,EAAOK,MAAQD,GAAK,IAE3CI,EAAqBlC,cACrBmC,EAAsB/B,YAAYN,EAAYsC,OAAO1B,GACzDwB,EACA,SAACG,EAAGzB,GAAJ,OAAUA,IAGN0B,EAAWC,YACfpC,EACAgC,EACA,SAACV,EAASe,GACR,IAAMrB,EAA4D,GAClEA,EAAIrB,EAAYsC,OAASK,IACzBtB,EAAIrB,EAAY4C,MAAQC,IACxBxB,EAAIrB,EAAY8C,OAASC,IAEzB,IAAMC,EAAmB3B,EAAIqB,GAEvBO,EAAoBtB,EAAQT,OADP,SAACU,GAAD,OAA6BoB,EAAiBE,YAAatB,EAAOR,UAE7F,MAAQ,CACN+B,MAAOzB,EAAYuB,GACnBG,OAAQlB,EAAae,MCpBrBI,EAAYC,YAAW,CAC3BC,WAAY,CACVC,MAAOC,IAAM,KACbC,WAAY,QAEdC,aAAc,CACZH,MAAOI,IAAI,KACXF,WAAY,UAIT,SAASG,IACd,IAAMC,EAAUT,IACVU,EAAUC,YAASxB,GACnBE,EAAqBsB,YAAS3B,GACpC,OACE4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,GACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,UACjCT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAaC,UAAU,YACrBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWD,UAAU,UAArB,uBACAX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,aAAW,WACXC,KAAK,WACLC,KAAG,EACHhD,MAAOS,EACPwC,SAAU,SAAAC,GAAK,OACb/C,EAAmB+C,EAAMC,OAAOnD,SAGlCgC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEpD,MAAOjC,EAAYsC,MACnBgD,QAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MACTC,MAAM,UAERvB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEpD,MAAOjC,EAAY4C,KACnB0C,QAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MACTC,MAAM,SAERvB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEpD,MAAOjC,EAAY8C,MACnBwC,QAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MACTC,MAAM,cAMhBvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASe,WAAW,UACrDxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,WAAnC,WAIF3B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYG,UAAW/B,EAAQP,WAAYoC,MAAM,SAASC,QAAQ,MAC/D7B,EAAQX,SAGba,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASe,WAAW,UACrDxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,WAAnC,UAIF3B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEG,UAAW/B,EAAQH,aACnBgC,MAAM,SACNC,QAAQ,MAEP7B,EAAQZ,QAGbc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASe,WAAW,UACrDxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,WAAnC,YAIF3B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEG,UACE9B,EAAQX,OAASW,EAAQZ,MAAQ,EAC7BW,EAAQP,WACRO,EAAQH,aAEdgC,MAAM,SACNC,QAAQ,MAEP7B,EAAQX,OAASW,EAAQZ,gDC3GvB2C,EAAUC,cAEVC,EAAkB9F,cAC/B4F,EAAQG,OAAOD,GACU1F,YAAiBwF,EAAQI,UAAUtF,GAAGoF,EAAiB,SAACzD,EAAGzB,GAAJ,OAAUA,ICQ1F,IAAMqF,EAAoBjG,cACpBkG,EAAqBlG,cACrBmG,EAAqBnG,cACrBoG,EAAwBpG,cAQxBqG,EANqBC,YAAO,CAChCC,OAAQpG,EACRqG,MAAOJ,EACPK,GAAI,SAAChF,EAASxB,GAAV,OAA0BwB,EAAQiF,KAAK,SAAAzF,GAAE,OAAIA,EAAGC,QAAUjB,OAGX0G,UAAU,SAAAjF,GAAM,OAAIkF,QAAQlF,GAAUA,OAASmF,IAE9FC,EAAeC,YAAQV,EAA2B,MAElDW,EAAQ5G,YAAyBP,EAAYoC,QAChDvB,GAAGuF,EAAmB,SAAC5D,EAAGzB,GAAJ,OAAUA,IAChCF,GAAG2F,EAA2B,SAAChE,EAAD4E,GAAA,OAAAA,EAAMtF,OAEjCuF,EAAe9G,YAAY,IAC9BM,GAAGwF,EAAoB,SAAC7D,EAAGzB,GAAJ,OAAUA,IACjCF,GAAG2F,EAA2B,SAAChE,EAAD8E,GAAA,IAAMpF,EAANoF,EAAMpF,MAAN,OAAkBqF,OAAOrF,KAEpDsF,GAAuBf,YAC3BgB,YAAkB,CAChB3F,KAAMqF,EACNjF,MAAOmF,EACPJ,iBAEFX,EACA,SAAAoB,GAAA,IAAGT,EAAHS,EAAGT,aAAcnF,EAAjB4F,EAAiB5F,KAAMI,EAAvBwF,EAAuBxF,MAAvB,OACE+E,EACI,CAAEnF,OAAMI,MAAOyF,OAAOzF,GAAQb,MAAO4F,EAAa5F,OAClD,CAAES,OAAMI,MAAOyF,OAAOzF,GAAQb,MAAOuG,YAAY,IAAIC,SAGvDC,GAAwBC,YAAMP,GAAsB,CACxDQ,YAAa,SAAAjH,GAAC,OAAIgG,QAAQhG,EAAEmB,QAC5B+F,WAAY,SAAAlH,GAAC,OAAKgG,QAAQhG,EAAEmB,WC7CvB,SACLwE,EADKU,GAGL,IADE5F,EACF4F,EADE5F,KAAM6D,EACR+B,EADQ/B,OAEF6C,EASR,SACEC,EACAC,GAEA,IAAMC,EAAS,GACf,IAAK,IAAMC,KAAOF,EAChBC,EAAOC,GAAOH,EAAK7G,IAAI8G,EAAME,IAE/B,OAAOD,EAjBOE,CAAU/G,EADxB4F,EADgBjG,QAGhB,IAAK,IAAMmH,KAAOjD,EAChBmD,YAAM,CACJ9B,SACAvF,OAAQ+G,EAAMI,GACdjD,OAAQA,EAAOiD,KDuCrBG,CAAWX,GAAsBE,YAAa,CAC5C3C,OAAQ,CAAEjF,cAAaC,iBACvBmB,KAAMyF,EACN9F,OAAQ,CACNf,YAAa,SAAA6G,GAAY,OAAKF,QAAQE,IACtC5G,cAAe,SAAA4G,GAAY,OAAIF,QAAQE,OAI3C,IAAMyB,GAASnI,YAAY,IACxBM,GAAGiH,GAAsBG,WAAY,iBAAM,2BAC3CU,MAAMC,YAAM,CAACvC,EAAoBJ,KAEpC7F,EAAYmB,MAAM,kBAAMwE,EAAQ8C,KAAK,OACrCxI,EAAckB,MAAM,kBAAMwE,EAAQ8C,KAAK,OAEvC1B,EAAMwB,MAAM1C,GACZoB,EAAasB,MAAM1C,GEhDnB,IAAM3C,GAAYC,YAAW,SAACuF,GAAD,MAAiB,CAC5CC,KAAM,CACJC,MAAO,QAETC,OAAQ,CACNC,OAAM,GAAAlI,OAAuB,EAAlB8H,EAAMK,UAAX,WAERC,MAAO,CACL3F,MAAO,UAIJ,SAAS4F,GAAaC,GAAY,IAC/BC,EAAqBD,EAArBC,iBACFC,EAAavF,YAASkD,GACtBsC,EAAcxF,YAASoD,GACvB+B,EAAQnF,YAASyE,IACjB3E,EAAUT,KACVoG,EAASC,cAQf,OANAC,oBAAU,WACJF,EAAOrI,OACTkF,EAAsBoB,OAAO+B,EAAOrI,SAErC,IAGD6C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0F,SAAA,KACE3F,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAakB,UAAW/B,EAAQgF,MAC9B7E,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,MAChC0D,EAAmB,kBAAoB,oBAE1CrF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWD,UAAU,UAArB,QACAX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACE7C,MAAOsH,EACPrE,SAAU,SAAA2E,GAAC,OAAI1D,EAAkB0D,EAAEzE,OAAOnD,SAE1CgC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,QAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MACTtD,MAAOlC,EAAYoC,OACnBqD,MAAM,WAERvB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,QAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MACTtD,MAAOlC,EAAY+B,QACnB0D,MAAM,aAGVvB,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEC,WAAS,EACTZ,MAAOrC,QAAQqC,GACf3D,MAAM,QACNwE,YAAY,cACZnI,KAAK,SACLI,MAAOuH,EACPtE,SAAU,SAAA2E,GAAC,OAAIzD,EAAmByD,EAAEzE,OAAOnD,UAE5CkH,GACClF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYE,QAAQ,UAAUC,UAAW/B,EAAQqF,OAC9CA,GAGLlF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACErE,QAAQ,YACRpC,MAAM,UACN0G,QAAS7D,EACTR,UAAW/B,EAAQkF,QAElBM,EAAmB,MAAQ,mFCpFhCjG,GAAYC,YAAW,CAC3BwF,KAAM,CACJqB,SAAU,QACVC,OAAQ,EACRrB,MAAO,UAIJ,SAASsB,KACd,IAAMvG,EAAUT,KAChB,OACEY,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAqBpI,MAAO,EAAGqI,YAAU,EAACzE,UAAW/B,EAAQgF,MAC3D7E,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CACE/E,MAAM,OACNgF,KAAMvG,EAAAC,EAAAC,cAACsG,GAAA,EAAD,MACN7F,UAAW8F,KACXC,GAAG,MAEL1G,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CACE/E,MAAM,aACNgF,KAAMvG,EAAAC,EAAAC,cAACyG,GAAA,EAAD,MACNhG,UAAW8F,KACXC,GAAG,gBAEL1G,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CACE/E,MAAM,UACNgF,KAAMvG,EAAAC,EAAAC,cAAC0G,GAAA,EAAD,MACNjG,UAAW8F,KACXC,GAAG,aAEJ1G,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CACC/E,MAAM,WACNgF,KAAMvG,EAAAC,EAAAC,cAAC2G,GAAA,EAAD,MACNlG,UAAW8F,KACXC,GAAG,wFCxCLI,GAAmB7K,cACnB8K,GAAkB9K,cAClB+K,GAAkB/K,cAElBgL,GAAqB7K,EAASgB,IAAI,SAAAM,GAAO,OAC7CA,EAAQwJ,KAAK,SAACjH,EAAGkH,GAAJ,OAAUA,EAAEhK,MAAQ8C,EAAE9C,UAG/BiK,GAAa/K,aAAY,GAC5BM,GAAGmK,GAAkB,kBAAM,IAC3BnK,GAAGX,EAAc,kBAAM,IACvBW,GAAGoK,GAAiB,kBAAM,IAEvBM,GAAoBhL,YAA2B,MAClDM,GAAGmK,GAAkB,SAACxI,EAAGzB,GAAJ,OAAUA,IAC/BF,GAAGX,EAAc,kBAAM,OACvBW,GAAGoK,GAAiB,kBAAM,OAEvBO,GAAmBD,GAAkBjK,IAAIyF,SAE/CyB,YAAM,CACJ9B,OAAQD,YAAO8E,GAAmBL,IAClC/J,OAAQqK,GACRnG,OAAQnF,ICDV,IAAMoD,GAAYC,YAAW,CAC3BC,WAAY,CACVC,MAAOC,IAAM,KACbC,WAAY,QAEdC,aAAc,CACZH,MAAOI,IAAI,KACXF,WAAY,QAEd8H,QAAS,CACP/G,QAAS,OACTC,eAAgB,SAChB+G,aAAc,YAIX,SAASC,KACd,IAAM/J,EAAUqC,YAASkH,IACnBS,EAAY3H,YAASqH,IACrBvH,EAAUT,KAChB,OACEY,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0F,SAAA,KACGjI,EAAQN,IAAI,SAAAO,GAAM,OACjBqC,EAAAC,EAAAC,cAAA,OAAKkE,IAAKzG,EAAOR,OACf6C,EAAAC,EAAAC,cAAA,OAAK0B,UAAW/B,EAAQ0H,SACtBvH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,MAAM,UACfzC,YAAatB,EAAOR,OAAOwK,sBAE9B3H,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,MAAM,SACNE,UACEjE,EAAOC,OAAS9B,EAAY+B,QACxBgC,EAAQH,aACRG,EAAQP,WAEdqC,QAAQ,aAEPhE,EAAOC,OAAS9B,EAAY+B,SAAW,KACvCF,EAAOK,QAGZgC,EAAAC,EAAAC,cAAC0H,GAAA,EAAD,CAAY3B,QAAS,kBAAMa,GAAiBnJ,EAAOR,SACjD6C,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,OAEF7H,EAAAC,EAAAC,cAAC4H,GAAA,EAAD,CAAMpB,GAAE,gBAAA5J,OAAkBa,EAAOR,QAC/B6C,EAAAC,EAAAC,cAAC0H,GAAA,EAAD,KACE5H,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,SAIN/H,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,SAGJhI,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,CAAQC,KAAMR,GACZ1H,EAAAC,EAAAC,cAACiI,GAAA,EAAD,kDACAnI,EAAAC,EAAAC,cAACkI,GAAA,EAAD,KACEpI,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQC,QAASe,IAAjB,UACAhH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQC,QAASc,IAAjB,aCzEV,IAAM3H,GAAYC,YAAW,SAACuF,GAAD,MAAmB,CAC9CC,KAAM,CACJwD,SAAU,OACVC,QAAS1D,EAAMK,cAINsD,GAAS,kBACpBvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQ3G,QAASA,GACf7B,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACExI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,eACVzI,EAAAC,EAAAC,cAACiF,GAAD,CAAcE,kBAAgB,KAEhCrF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,uBACVzI,EAAAC,EAAAC,cAACiF,GAAD,OAEFnF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,YACVzI,EAAAC,EAAAC,cAACuH,GAAD,OAEFzH,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,KACVzI,EAAAC,EAAAC,cAACN,EAAD,QAGJI,EAAAC,EAAAC,cAACwI,GAAD,QAIG,SAASC,KACd,IAAM9I,EAAUT,KAChB,OACEY,EAAAC,EAAAC,cAAA,OAAK0B,UAAW/B,EAAQgF,MACtB7E,EAAAC,EAAAC,cAAC0I,GAAD,oCClCAC,GAAcC,SAASC,eAAe,QAEtCnE,GAAQoE,eAMdC,IAASC,OAAOlJ,EAAAC,EAAAC,cALH,kBACXF,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAevE,MAAOA,IACpB5E,EAAAC,EAAAC,cAACyI,GAAD,QAGY,MAAUE","file":"static/js/main.176d5652.chunk.js","sourcesContent":["const localStorageKey = 'taxi-data';\n\nexport function addDataToLocalStorage(data: any) {\n  window.localStorage.setItem(localStorageKey, JSON.stringify(data));\n}\n\nexport function getDataFromLocalStorage() {\n  return JSON.parse(window.localStorage.getItem(localStorageKey) || '[]') || [];\n}\n","import { createStore, createEvent } from 'effector';\nimport { RECORD_TYPE } from './constants';\nimport { addDataToLocalStorage, getDataFromLocalStorage } from '../persistence';\n\nexport const removeRecord = createEvent<number>();\nexport const recordAdded = createEvent<Record>();\nexport const recordChanged = createEvent<Record>();\n\nexport type Record = {\n    added: number,\n    type: RECORD_TYPE,\n    value: number\n  }\n\nexport const $records = createStore<Record[]>(getDataFromLocalStorage())\n  .on(recordAdded, (s, p) => [...s, p])\n  .on(removeRecord, (s, p) => s.filter(el => el.added !== p))\n  .on(recordChanged, (s, p) => s.map(el => (el.added === p.added ? p : el)));\n\n$records.watch(addDataToLocalStorage);\n","export enum RECORD_TYPE {\n  INCOME = 'INCOME',\n  EXPENSE = 'EXPENSE'\n};","import { isToday, fromUnixTime, isThisMonth, isThisWeek } from 'date-fns';\nimport { createStore, createEvent, combine } from 'effector';\n\nimport { $records, Record } from '../../core/records';\nimport { RECORD_TYPE } from '../../core/constants';\n\nexport enum ResultsType {\n  TODAY = 'TODAY',\n  WEEK = 'WEEK',\n  MONTH = 'MONTH'\n}\n\nconst reduceDebit = (records: Record[]) =>\n  records\n    .filter(record => record.type === RECORD_TYPE.EXPENSE)\n    .reduce((acc, record) => record.value + acc, 0);\n\nconst reduceCredit = (records: Record[]) =>\n  records\n    .filter(record => record.type === RECORD_TYPE.INCOME)\n    .reduce((acc, record) => record.value + acc, 0);\n\nconst resultsTypeChanged = createEvent<ResultsType>();\nconst $currentResultsType = createStore(ResultsType.TODAY).on(\n  resultsTypeChanged,\n  (_, p) => p\n);\n\nconst $results = combine(\n  $records,\n  $currentResultsType,\n  (records, currentResultsType) => {\n    const map: { [id: string] : (date: number | Date) => boolean; } = {}\n    map[ResultsType.TODAY] = isToday;\n    map[ResultsType.WEEK] = isThisWeek;\n    map[ResultsType.MONTH] = isThisMonth;\n\n    const intervalFunction = map[currentResultsType];\n    const isRecordInInterval = (record: Record): boolean => intervalFunction(fromUnixTime(record.added));\n    const recordsInInterval = records.filter(isRecordInInterval)\n    return ({\n      debit: reduceDebit(recordsInInterval),\n      credit: reduceCredit(recordsInInterval)\n    });\n  }\n);\n\nexport { $results, $currentResultsType, resultsTypeChanged };\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n  Box,\n  Grid,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio\n} from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport { useStore } from 'effector-react';\n\nimport {\n  $results,\n  $currentResultsType,\n  ResultsType,\n  resultsTypeChanged\n} from './store';\n\nconst useStyles = makeStyles({\n  incomeText: {\n    color: green[700],\n    fontWeight: 'bold'\n  },\n  spendingText: {\n    color: red[700],\n    fontWeight: 'bold'\n  }\n});\n\nexport function HomePage() {\n  const classes = useStyles();\n  const results = useStore($results);\n  const currentResultsType = useStore($currentResultsType);\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Results for period:</FormLabel>\n            <RadioGroup\n              aria-label=\"position\"\n              name=\"position\"\n              row\n              value={currentResultsType}\n              onChange={event =>\n                resultsTypeChanged(event.target.value as ResultsType)\n              }\n            >\n              <FormControlLabel\n                value={ResultsType.TODAY}\n                control={<Radio />}\n                label=\"Today\"\n              />\n              <FormControlLabel\n                value={ResultsType.WEEK}\n                control={<Radio />}\n                label=\"Week\"\n              />\n              <FormControlLabel\n                value={ResultsType.MONTH}\n                control={<Radio />}\n                label=\"Month\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n      </Grid>\n      <Grid item xs={4}>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography align=\"center\" variant=\"caption\">\n            Credit\n          </Typography>\n        </Box>\n        <Typography className={classes.incomeText} align=\"center\" variant=\"h4\">\n          {results.credit}\n        </Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography align=\"center\" variant=\"caption\">\n            Debit\n          </Typography>\n        </Box>\n        <Typography\n          className={classes.spendingText}\n          align=\"center\"\n          variant=\"h4\"\n        >\n          {results.debit}\n        </Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography align=\"center\" variant=\"caption\">\n            Balance\n          </Typography>\n        </Box>\n        <Typography\n          className={\n            results.credit - results.debit > 0\n              ? classes.incomeText\n              : classes.spendingText\n          }\n          align=\"center\"\n          variant=\"h4\"\n        >\n          {results.credit - results.debit}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import { createHashHistory } from 'history';\nimport { createStore, createEvent } from 'effector';\n\nexport const history = createHashHistory();\n\nexport const locationChanged = createEvent<any>();\nhistory.listen(locationChanged);\nexport const $location = createStore<any>(history.location).on(locationChanged, (_, p) => p);\n\n","import {\n  createStore,\n  createEvent,\n  sample,\n  restore,\n  createStoreObject,\n  split,\n  merge\n} from 'effector';\nimport { getUnixTime } from 'date-fns';\nimport { history, locationChanged } from '../../routing';\nimport { RECORD_TYPE } from '../../core/constants';\nimport { recordAdded, recordChanged, $records } from '../../core/records';\nimport { guardShape } from '../../util';\n\nconst recordTypeChanged = createEvent<RECORD_TYPE>();\nconst recordValueChanged = createEvent<string>();\nconst saveRecordRequsted = createEvent();\nconst editRecordPageMounted = createEvent<number>();\n\nconst recordToEditPicked = sample({\n  source: $records,\n  clock: editRecordPageMounted,\n  fn: (records, recordAdded) => records.find(el => el.added === recordAdded)\n});\n\nconst existedRecordToEditPicked = recordToEditPicked.filterMap(record => Boolean(record) ? record : undefined);\n\nconst recordToEdit = restore(existedRecordToEditPicked, null);\n\nconst $type = createStore<RECORD_TYPE>(RECORD_TYPE.INCOME)\n  .on(recordTypeChanged, (_, p) => p)\n  .on(existedRecordToEditPicked, (_, { type }) => type);\n\nconst $recordValue = createStore('')\n  .on(recordValueChanged, (_, p) => p)\n  .on(existedRecordToEditPicked, (_, { value }) => String(value));\n\nconst recordToSavePrepared = sample(\n  createStoreObject({\n    type: $type,\n    value: $recordValue,\n    recordToEdit\n  }),\n  saveRecordRequsted,\n  ({ recordToEdit, type, value }) =>\n    recordToEdit\n      ? { type, value: Number(value), added: recordToEdit.added }\n      : { type, value: Number(value), added: getUnixTime(new Date()) }\n);\n\nconst recordToSaveValidated = split(recordToSavePrepared, {\n  recordValid: p => Boolean(p.value),\n  valueEmpty: p => !Boolean(p.value)\n});\n\nguardShape(recordToSaveValidated.recordValid, {\n  target: { recordAdded, recordChanged },\n  data: recordToEdit,\n  filter: {\n    recordAdded: recordToEdit => !Boolean(recordToEdit),\n    recordChanged: recordToEdit => Boolean(recordToEdit),\n  }\n});\n\nconst $error = createStore('')\n  .on(recordToSaveValidated.valueEmpty, () => 'Record cannot be empty')\n  .reset(merge([recordValueChanged, locationChanged]));\n\nrecordAdded.watch(() => history.push('/'));\nrecordChanged.watch(() => history.push('/'));\n\n$type.reset(locationChanged);\n$recordValue.reset(locationChanged);\n\nexport {\n  recordTypeChanged,\n  recordValueChanged,\n  $type,\n  $recordValue,\n  $error,\n  saveRecordRequsted,\n  editRecordPageMounted\n};\n","import { guard, Unit, Store } from 'effector';\n\ninterface Config<S, T, K> {\n  data: Store<S>;\n  target: { [P in keyof T]: Unit<K> };\n  filter: { [P in keyof T]: (s: S) => boolean };\n}\n\nexport function guardShape<S, T, K>(\n  source: Unit<K>,\n  { data, target, filter }: Config<S, T, K>\n) {\n  const cases = decompose(data, filter);\n  for (const key in target) {\n    guard({\n      source,\n      filter: cases[key],\n      target: target[key]\n    });\n  }\n}\nfunction decompose<S, T>(\n  unit: Store<S>,\n  shape: { [P in keyof T]: (s: S) => boolean }\n) {\n  const result = {} as { [P in keyof T]: Store<boolean> };\n  for (const key in shape) {\n    result[key] = unit.map(shape[key]);\n  }\n  return result;\n}\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  RadioGroup,\n  Radio,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  TextField,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport { useStore } from 'effector-react';\nimport {\n  $type,\n  $error,\n  recordTypeChanged,\n  $recordValue,\n  recordValueChanged,\n  saveRecordRequsted,\n  editRecordPageMounted\n} from './store';\nimport { RECORD_TYPE } from '../../core/constants';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    margin: `${theme.spacing() * 2}px 0px`\n  },\n  error: {\n    color: 'red'\n  }\n}));\n\nexport function RecordScreen(props: any) {\n  const { recordIsCreating } = props;\n  const recordType = useStore($type);\n  const recordValue = useStore($recordValue);\n  const error = useStore($error);\n  const classes = useStyles();\n  const params = useParams<any>();\n\n  useEffect(() => {\n    if (params.added) {\n      editRecordPageMounted(Number(params.added));\n    }\n  }, []);\n\n  return (\n    <>\n      <FormControl className={classes.root}>\n        <Typography align=\"center\" variant=\"h4\">\n          {recordIsCreating ? 'New transaction' : 'Edit transaction'}\n        </Typography>\n        <FormLabel component=\"legend\">Type</FormLabel>\n        <RadioGroup\n          value={recordType}\n          onChange={e => recordTypeChanged(e.target.value as RECORD_TYPE)}\n        >\n          <FormControlLabel\n            control={<Radio />}\n            value={RECORD_TYPE.INCOME}\n            label=\"Income\"\n          />\n          <FormControlLabel\n            control={<Radio />}\n            value={RECORD_TYPE.EXPENSE}\n            label=\"Expense\"\n          />\n        </RadioGroup>\n        <TextField\n          autoFocus\n          error={Boolean(error)}\n          label=\"Value\"\n          placeholder=\"Enter value\"\n          type=\"number\"\n          value={recordValue}\n          onChange={e => recordValueChanged(e.target.value)}\n        />\n        {error && (\n          <Typography variant=\"caption\" className={classes.error}>\n            {error}\n          </Typography>\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={saveRecordRequsted as any}\n          className={classes.button}\n        >\n          {recordIsCreating ? 'Add' : 'Save'}\n        </Button>\n      </FormControl>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  BottomNavigation as MUIBottomNavigation,\n  BottomNavigationAction\n} from '@material-ui/core';\nimport { PostAdd, History, Home, ShowChart } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nexport function BottomNavigation() {\n  const classes = useStyles();\n  return (\n    <MUIBottomNavigation value={0} showLabels className={classes.root}>\n      <BottomNavigationAction\n        label=\"Main\"\n        icon={<Home />}\n        component={Link}\n        to='/'\n      />\n      <BottomNavigationAction\n        label=\"New record\"\n        icon={<PostAdd />}\n        component={Link}\n        to='/add-record'\n      />\n      <BottomNavigationAction\n        label=\"History\"\n        icon={<History />}\n        component={Link}\n        to='/history'\n      />\n       <BottomNavigationAction\n        label=\"Anaytics\"\n        icon={<ShowChart />}\n        component={Link}\n        to='/history'\n      />\n    </MUIBottomNavigation>\n  );\n}\n","import { createStore, createEvent, guard, sample } from 'effector';\nimport { removeRecord, $records } from '../../core/records';\n\nconst removeBtnClicked = createEvent<number>();\nconst removeCancelled = createEvent<any>();\nconst removeConfirmed = createEvent<any>();\n\nconst $recordsForHistory = $records.map(records =>\n  records.sort((a, b) => b.added - a.added)\n);\n\nconst $modalOpen = createStore(false)\n  .on(removeBtnClicked, () => true)\n  .on(removeRecord, () => false)\n  .on(removeCancelled, () => false);\n\nconst $recordIdToRemove = createStore<number | null>(null)\n  .on(removeBtnClicked, (_, p) => p)\n  .on(removeRecord, () => null)\n  .on(removeCancelled, () => null);\n\nconst $recordIdDefined = $recordIdToRemove.map(Boolean);\n\nguard({\n  source: sample($recordIdToRemove, removeConfirmed),\n  filter: $recordIdDefined,\n  target: removeRecord\n});\n\nexport {\n  $modalOpen,\n  $recordsForHistory,\n  $recordIdToRemove,\n  removeBtnClicked,\n  removeCancelled,\n  removeConfirmed\n};\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { Link } from 'react-router-dom';\nimport {\n  Typography,\n  Divider,\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { green, red } from '@material-ui/core/colors';\nimport { Delete, Edit } from '@material-ui/icons';\nimport { fromUnixTime } from 'date-fns'\nimport { RECORD_TYPE } from '../../core/constants';\nimport {\n  $modalOpen,\n  $recordsForHistory,\n  removeBtnClicked,\n  removeCancelled,\n  removeConfirmed\n} from './store';\n\nconst useStyles = makeStyles({\n  incomeText: {\n    color: green[700],\n    fontWeight: 'bold'\n  },\n  spendingText: {\n    color: red[700],\n    fontWeight: 'bold'\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});\n\nexport function HistoryScreen() {\n  const records = useStore($recordsForHistory);\n  const modalOpen = useStore($modalOpen);\n  const classes = useStyles();\n  return (\n    <>\n      {records.map(record => (\n        <div key={record.added}>\n          <div className={classes.content}>\n            <div>\n              <Typography align=\"center\">\n                {fromUnixTime(record.added).toLocaleDateString()}\n              </Typography>\n              <Typography\n                align=\"center\"\n                className={\n                  record.type === RECORD_TYPE.EXPENSE\n                    ? classes.spendingText\n                    : classes.incomeText\n                }\n                variant=\"subtitle2\"\n              >\n                {record.type === RECORD_TYPE.EXPENSE && '- '}\n                {record.value}\n              </Typography>\n            </div>\n            <IconButton onClick={() => removeBtnClicked(record.added)}>\n              <Delete />\n            </IconButton>\n            <Link to={`/edit-record/${record.added}`}>\n              <IconButton>\n                <Edit />\n              </IconButton>\n            </Link>\n          </div>\n          <Divider />\n        </div>\n      ))}\n      <Dialog open={modalOpen}>\n        <DialogContent>Are you sure you want remove this record?</DialogContent>\n        <DialogActions>\n          <Button onClick={removeConfirmed}>Remove</Button>\n          <Button onClick={removeCancelled}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from 'react';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core'\r\nimport { HomePage } from './pages/home';\r\nimport { RecordScreen } from './pages/record';\r\nimport { BottomNavigation } from './components/bottom-navigation';\r\nimport { HistoryScreen } from './pages/history';\r\nimport { history } from './routing';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    padding: theme.spacing(),\r\n  }\r\n}));\r\n\r\nexport const Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route path='/add-record'>\r\n        <RecordScreen recordIsCreating/>\r\n      </Route>\r\n      <Route path='/edit-record/:added'>\r\n        <RecordScreen />\r\n      </Route>\r\n      <Route path='/history'>\r\n        <HistoryScreen />\r\n      </Route>\r\n      <Route path='/'>\r\n        <HomePage />\r\n      </Route>\r\n    </Switch>\r\n    <BottomNavigation />\r\n  </Router>\r\n);\r\n\r\nexport function App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app';\nimport './styles.css';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\n\nconst rootElement = document.getElementById('root');\n\nconst theme = createMuiTheme();\nconst Root = () => (\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n);\nReactDOM.render(<Root />, rootElement);\n"],"sourceRoot":""}